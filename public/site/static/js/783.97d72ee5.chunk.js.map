{"version":3,"file":"static/js/783.97d72ee5.chunk.js","mappings":"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","sources":["services/iAxios.js","components/Loader/Loader.js","components/GoodLink/GoodLink.js","components/GoodList/GoodList.js","components/FileList/FileList.js","components/InputBlock/InputBlock.js","pages/CheckLink.js"],"sourcesContent":["import axios from \"axios\";\r\n\r\nconst { REACT_APP_SERVER } = process.env;\r\n\r\nconst iUser = axios.create({\r\n  baseURL: REACT_APP_SERVER,\r\n});\r\n\r\nconst setToken = (token) => {\r\n  token\r\n    ? (iUser.defaults.headers.authorization = `Bearer ${token}`)\r\n    : (iUser.defaults.headers.authorization = \"\");\r\n};\r\n\r\nexport { iUser, setToken };\r\n","import \"./Loader.css\";\r\n\r\nconst Loader = () => {\r\n  return (\r\n    <div className=\"loader\">\r\n      <div className=\"loader-spinner\"></div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport { Loader };\r\n","import \"./GoodLink.css\";\r\n\r\nconst GoodLink = ({ item }) => {\r\n  return (\r\n    <>\r\n      {/* <p>{item}</p> */}\r\n      <a href={item} target=\"_blank\" rel=\"noreferrer\">\r\n        {item}\r\n      </a>\r\n    </>\r\n  );\r\n};\r\n\r\nexport { GoodLink };\r\n","import { GoodLink } from \"../GoodLink/GoodLink\";\r\nimport \"./GoodList.css\";\r\n\r\nconst GoodList = ({ list }) => {\r\n  return (\r\n    <ul className=\"GoodList\">\r\n      {list.map((item, idx) => (\r\n        <li key={idx}>\r\n          <GoodLink item={item} />\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\nexport { GoodList };\r\n","import \"./FileList.css\";\r\n\r\nconst SERVER = process.env.REACT_APP_SERVER;\r\n\r\nconst FileList = ({ list }) => {\r\n  return (\r\n    <ul className=\"FileList\">\r\n      {list.map((item, idx) => (\r\n        <li key={idx}>\r\n          <FileItem item={item} />\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nconst FileItem = ({ item }) => {\r\n  return (\r\n    <>\r\n      {/* <p>{item}</p> */}\r\n      <a\r\n        href={`${SERVER}/files/${item}`}\r\n        target=\"_blank\"\r\n        rel=\"noreferrer\"\r\n        download={item}\r\n      >\r\n        {item}\r\n      </a>\r\n    </>\r\n  );\r\n};\r\n\r\nexport { FileList };\r\n","import React, { useRef, useState } from \"react\";\r\nimport { iUser } from \"../../services/iAxios\";\r\nimport { Loader } from \"../Loader/Loader\";\r\nimport { GoodList } from \"../GoodList/GoodList\";\r\nimport { FileList } from \"../FileList/FileList\";\r\nimport \"./InputBlock.css\";\r\n\r\n// const SERVER = process.env.REACT_APP_SERVER;\r\n\r\nconst InputBlock = () => {\r\n  const [link, setLink] = useState(\"https://comfortshoesottawa.com\");\r\n  const [qParams, setQParams] = useState(\"\");\r\n  // const [selectedFile, setSelectedFile] = useState(null);\r\n  const [resChecking, setResChecking] = useState({ status: \"\", goodlinks: [] });\r\n  const [resFind, setResFind] = useState({ status: \"\", products: [] });\r\n  const [checkingFile, setCheckingFile] = useState({\r\n    status: \"\",\r\n    fileList: [],\r\n  });\r\n  // const [resPutFile, setResPutFile] = useState(\"\");\r\n  const filePicker = useRef(null);\r\n\r\n  const handleFind = async () => {\r\n    if (qParams && link) {\r\n      try {\r\n        setResFind({ status: \"isLoading\" });\r\n        const { data } = await iUser.post(\"/api/files/findprod\", {\r\n          link,\r\n          qParams,\r\n        });\r\n        setResFind(data);\r\n      } catch (error) {\r\n        setResFind({ status: error.message, products: [] });\r\n        console.log(error);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleCheckLink = async () => {\r\n    if (link) {\r\n      try {\r\n        setResChecking({ status: \"isLoading\" });\r\n        const { data } = await iUser.post(\"/api/files/check\", { link });\r\n        setResChecking({ ...data });\r\n      } catch (error) {\r\n        setResChecking({ status: error.message, goodlinks: [] });\r\n        console.log(error);\r\n      }\r\n    }\r\n  };\r\n\r\n  const resetLinkFile = () => {\r\n    filePicker.current.value = \"\";\r\n  };\r\n\r\n  // const handleCheckFile = async () => {\r\n  //   // if (resPutFile === \"Ok\") {\r\n  //   try {\r\n  //     setCheckingFile({ status: \"isLoading\" });\r\n  //     const { data } = await iUser.get(\"/api/files/checkfile\");\r\n  //     setCheckingFile({ ...data });\r\n  //   } catch (error) {\r\n  //     setCheckingFile({ status: error.message, fileList: [] });\r\n  //     console.log(error);\r\n  //   }\r\n  //   // }\r\n  // };\r\n\r\n  const checkFile = async () => {\r\n    if (filePicker.current.files.length > 0) {\r\n      setCheckingFile({ status: \"isLoading\" });\r\n      try {\r\n        const { data } = await iUser.putForm(\"/api/files/checkfile\", {\r\n          [filePicker.current.name]: filePicker.current.files[0],\r\n        });\r\n        setCheckingFile({ ...data });\r\n        // console.log(data.fileList);\r\n      } catch (error) {\r\n        setCheckingFile({ status: error.message, fileList: [] });\r\n        console.log(error);\r\n      }\r\n    }\r\n  };\r\n\r\n  // const putFile = async ({ target: { name, files } }) => {\r\n  //   if (files.length > 0) {\r\n  //     try {\r\n  //       const { status } = await iUser.putForm(\"/api/files/\", {\r\n  //         [name]: files[0],\r\n  //       });\r\n  //       status && setResPutFile(\"Ok\");\r\n  //     } catch (error) {\r\n  //       setResPutFile(error.message);\r\n  //     }\r\n  //   } else {\r\n  //     setResPutFile(\"\");\r\n  //   }\r\n  // };\r\n\r\n  return (\r\n    <div className=\"input-block\">\r\n      <input\r\n        placeholder=\"input link\"\r\n        type=\"text\"\r\n        value={link}\r\n        onChange={(e) => setLink(e.target.value)}\r\n      />\r\n      <button onClick={handleCheckLink}>check link</button>\r\n      <p>{resChecking.status}</p>\r\n      {resChecking.status === \"isLoading\" ? (\r\n        <Loader />\r\n      ) : (\r\n        <GoodList list={resChecking.goodlinks} />\r\n      )}\r\n      <input\r\n        placeholder=\"input qParams\"\r\n        type=\"text\"\r\n        value={qParams}\r\n        onChange={(e) => setQParams(e.target.value)}\r\n      />\r\n      <button onClick={handleFind}>find</button>\r\n      <p>{resFind.status}</p>\r\n      {resFind.status === \"isLoading\" ? (\r\n        <Loader />\r\n      ) : (\r\n        <GoodList list={resFind.products} />\r\n      )}\r\n      <div className=\"chkfile-block\">\r\n        <input type=\"button\" onClick={resetLinkFile} value={\"X\"} />{\" \"}\r\n        <input\r\n          placeholder=\"input file\"\r\n          type=\"file\"\r\n          name=\"linkFile\"\r\n          ref={filePicker}\r\n          accept=\".xls,.xlsx,.txt,.csv\"\r\n          // onChange={putFile}\r\n        />\r\n        <button className=\"chkfile-btn\" onClick={checkFile}>\r\n          check file\r\n        </button>\r\n      </div>\r\n      <p>{checkingFile.status}</p>\r\n      {checkingFile.status === \"isLoading\" ? (\r\n        <Loader />\r\n      ) : (\r\n        // <Loader />\r\n        <FileList list={checkingFile.fileList} />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\nexport { InputBlock };\r\n","import { InputBlock } from \"../components/InputBlock/InputBlock\";\r\n\r\nconst CheckLink = () => {\r\n  return (\r\n    <div className=\"checklink-page\">\r\n      <InputBlock />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CheckLink;\r\n"],"names":["iUser","axios","baseURL","process","Loader","_jsx","className","children","GoodLink","_ref","item","_Fragment","href","target","rel","GoodList","list","map","idx","FileList","FileItem","_ref2","concat","download","InputBlock","_useState","useState","_useState2","_slicedToArray","link","setLink","_useState3","_useState4","qParams","setQParams","_useState5","status","goodlinks","_useState6","resChecking","setResChecking","_useState7","products","_useState8","resFind","setResFind","_useState9","fileList","_useState10","checkingFile","setCheckingFile","filePicker","useRef","handleFind","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_yield$iUser$post","data","wrap","_context","prev","next","post","sent","t0","message","console","log","stop","apply","arguments","handleCheckLink","_callee2","_yield$iUser$post2","_context2","_objectSpread","checkFile","_ref3","_callee3","_yield$iUser$putForm","_context3","current","files","length","putForm","_defineProperty","name","_jsxs","placeholder","type","value","onChange","e","onClick","ref","accept"],"sourceRoot":""}